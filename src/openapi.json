{"openapi": "3.1.0", "info": {"title": "AIMES Ecosystem API", "summary": "API to retrieve data in the AIMES Ecosystem platform.", "contact": {"name": "University of Melbourne - Transport Technologies/AIMES", "url": "https://eng.unimelb.edu.au/industry/aimes"}, "version": "0.1.0"}, "servers": [{"url": "https://api.unimelb-transport-technologies.cloud.edu.au/v1"}], "paths": {"/regions": {"get": {"tags": ["Regions"], "summary": "List Regions", "description": "This resource allows you to list all regions that are available to the API consumer.\n\nThe shown regions and their `features` depend on the entitlements that are granted to the user.\nFor instance, if the user who created the API key only has access to the Metro Melbourne region, only Metro Melbourne will appear in the response.", "operationId": "list_regions_regions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Region"}, "type": "array", "title": "Response List Regions Regions Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}": {"get": {"tags": ["Regions"], "summary": "Get Region", "description": "This resource allows you to fetch the details of a single Region.\n\n`features` will depend on the entitlements that are granted to the user.\nFor instance, if the user who created the API key only has access to `LIVE_VOLUME` and `PREDICTED_VOLUME`, only those two features will appear there.", "operationId": "get_region_regions__region__get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Region"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links": {"get": {"tags": ["Road network layout"], "summary": "Get Links", "description": "This resource allows you to list all Links available in a particular region.\n\nMore details on the definition of Link [here](https://docs.unimelb-transport-technologies.cloud.edu.au/platform/glossary/definition-of-terms#linkroad).", "operationId": "get_links_regions__region__links_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/RoadNetworkLink"}, "title": "Response Get Links Regions  Region  Links Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{id}": {"get": {"tags": ["Road network layout"], "summary": "Get Link By Id", "description": "This resource allows you to fetch the details of a single Link in a particular region.\n\nMore details on the definition of Link [here](https://docs.unimelb-transport-technologies.cloud.edu.au/platform/glossary/definition-of-terms#linkroad).", "operationId": "get_link_by_id_regions__region__links__id__get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "id", "in": "path", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoadNetworkLink"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/intersections": {"get": {"tags": ["Road network layout"], "summary": "Get Intersections", "description": "This resource allows you to list all Intersections available in a particular region.\n\nMore details on the definition of Intersection [here](https://docs.unimelb-transport-technologies.cloud.edu.au/platform/glossary/definition-of-terms#intersection).", "operationId": "get_intersections_regions__region__intersections_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/RoadNetworkIntersection"}, "title": "Response Get Intersections Regions  Region  Intersections Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/intersections/{id}": {"get": {"tags": ["Road network layout"], "summary": "Get Intersection By Id", "description": "This resource allows you to fetch the details of a single Intersection in a particular region.\n\nMore details on the definition of Intersection [here](https://docs.unimelb-transport-technologies.cloud.edu.au/platform/glossary/definition-of-terms#intersection).", "operationId": "get_intersection_by_id_regions__region__intersections__id__get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "id", "in": "path", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoadNetworkIntersection"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/turns": {"get": {"tags": ["Road network layout"], "summary": "Get Turns", "description": "This resource allows you to get all relationships between two Links.\n\nThere are three possible relationships between two Links: \n- `RIGHT`: Traffic going from the Link denoted in `from_link_id` into `to_link_id` take a right-hand turn.\n- `LEFT`: Traffic going from the Link denoted in `from_link_id` into `to_link_id` take a left-hand turn.\n- `THROUGH`: Traffic going from the Link denoted in `from_link_id` into `to_link_id` goes in straight direction.\n\nMore details on the definition of Link [here](https://docs.unimelb-transport-technologies.cloud.edu.au/platform/glossary/definition-of-terms#linkroad).", "operationId": "get_turns_regions__region__turns_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/RoadNetworkTurn"}, "title": "Response Get Turns Regions  Region  Turns Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/volumes": {"get": {"tags": ["Volumes"], "summary": "Get All Link Volumes", "description": "This resource allows you to get the actual or predicted hourly volume of all Links in a region **at a particular time**.\n\n### Getting actual volume\nYou need to set `time` to a present or past time, and set the `minutes_ahead` parameter to `0`.\n\n### Getting predicted volume\nYou can set `time` to a time in the future **up to 3 hours ahead**.\n\nIf you leave `minutes_ahead` undefined, it will select the best prediction to use.\nFor example, if you select a time 2 hours from the current time, the best prediction would be the 120-minute prediction, hence `minutes_ahead` is automatically set to `120`.\n\n**IMPORTANT:** Note that `time` should be the time when the value should happen.\n\nSuppose you set `minutes_ahead` to `120` and set `time` to the current time.\nThe response is NOT the predicted volume 2 hours from now.\nInstead, it is the volume prediction at current time _predicted_ 2 hours ago.", "operationId": "get_all_link_volumes_regions__region__volumes_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"anyOf": [{"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string"}, {"type": "null"}], "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data.", "title": "Minutes Ahead"}, "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data."}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "VOL:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/VolumeRecord"}, "title": "Response Get All Link Volumes Regions  Region  Volumes Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{link_id}/volumes": {"get": {"tags": ["Volumes"], "summary": "Get Historical Link Volumes", "description": "This resource allows you to view the volume time series of a single Link in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\n### Getting historical actual volume\nYou must set `since` and `until` to be a time in the past or present, and set `minutes_ahead` to 0.\n\n### Getting predicted volume\nYou can set `until` to be a time in the future, up to **3 hours ahead**.\nYou must set `minutes_ahead` to value greater than `0`.\n\nNote that `minutes_ahead = 120` represents a prediction made for 120 minutes ahead when the prediction was made.\nHence, when you set `minutes_ahead` to `120`, the furthest you can set `until` is 2 hours from the current time, and so on.", "operationId": "get_historical_link_volumes_regions__region__links__link_id__volumes_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Link Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string", "default": "0", "title": "Minutes Ahead"}}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "VOL:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/VolumeRecord"}, "title": "Response Get Historical Link Volumes Regions  Region  Links  Link Id  Volumes Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/speeds": {"get": {"tags": ["Speeds"], "summary": "Get All Link Speeds", "description": "This resource allows you to get the actual or predicted speed of all Links in a region **at a particular time**.\n\n### Getting actual speed\nYou need to set `time` to a present or past time, and set the `minutes_ahead` parameter to `0`.\n\n### Getting predicted speed\nYou can set `time` to a time in the future **up to 3 hours ahead**.\n\nIf you leave `minutes_ahead` undefined, it will select the best prediction to use.\nFor example, if you select a time 2 hours from the current time, the best prediction would be the 120-minute prediction, hence `minutes_ahead` is automatically set to `120`.\n\n**IMPORTANT:** Note that `time` should be the time when the value should happen.\n\nSuppose you set `minutes_ahead` to `120` and set `time` to the current time.\nThe response is NOT the predicted speed 2 hours from now.\nInstead, it is the speed prediction at current time _predicted_ 2 hours ago.", "operationId": "get_all_link_speeds_regions__region__speeds_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"anyOf": [{"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string"}, {"type": "null"}], "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data.", "title": "Minutes Ahead"}, "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data."}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "SPEED:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/SpeedRecord"}, "title": "Response Get All Link Speeds Regions  Region  Speeds Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{link_id}/speeds": {"get": {"tags": ["Speeds"], "summary": "Get Historical Link Speeds", "description": "This resource allows you to view the speed time series of a single Link in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\n### Getting historical actual speed\nYou must set `since` and `until` to be a time in the past or present, and set `minutes_ahead` to 0.\n\n### Getting predicted speed\nYou can set `until` to be a time in the future, up to **3 hours ahead**.\nYou must set `minutes_ahead` to value greater than `0`.\n\nNote that `minutes_ahead = 120` represents a prediction made for 120 minutes ahead when the prediction was made.\nHence, when you set `minutes_ahead` to `120`, the furthest you can set `until` is 2 hours from the current time, and so on.", "operationId": "get_historical_link_speeds_regions__region__links__link_id__speeds_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Link Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string", "default": "0", "title": "Minutes Ahead"}}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "SPEED:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/SpeedRecord"}, "title": "Response Get Historical Link Speeds Regions  Region  Links  Link Id  Speeds Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/congestions": {"get": {"tags": ["Congestions"], "summary": "Get All Link Congestions", "description": "This resource allows you to get the actual or predicted congestion of all Links in a region **at a particular time**.\n\n### Getting actual congestion\nYou need to set `time` to a present or past time, and set the `minutes_ahead` parameter to `0`.\n\n### Getting predicted congestion\nYou can set `time` to a time in the future **up to 3 hours ahead**.\n\nIf you leave `minutes_ahead` undefined, it will select the best prediction to use.\nFor example, if you select a time 2 hours from the current time, the best prediction would be the 120-minute prediction, hence `minutes_ahead` is automatically set to `120`.\n\n**IMPORTANT:** Note that `time` should be the time when the value should happen.\n\nSuppose you set `minutes_ahead` to `120` and set `time` to the current time.\nThe response is NOT the predicted congestion 2 hours from now.\nInstead, it is the congestion prediction at current time _predicted_ 2 hours ago.", "operationId": "get_all_link_congestions_regions__region__congestions_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"anyOf": [{"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string"}, {"type": "null"}], "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data.", "title": "Minutes Ahead"}, "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data."}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "VOL:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CongestionRecord"}, "title": "Response Get All Link Congestions Regions  Region  Congestions Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{link_id}/congestions": {"get": {"tags": ["Congestions"], "summary": "Get Historical Link Congestions", "description": "This resource allows you to view the congestion time series of a single Link in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\n### Getting historical actual congestion\nYou must set `since` and `until` to be a time in the past or present, and set `minutes_ahead` to 0.\n\n### Getting predicted congestion\nYou can set `until` to be a time in the future, up to **3 hours ahead**.\nYou must set `minutes_ahead` to value greater than `0`.\n\nNote that `minutes_ahead = 120` represents a prediction made for 120 minutes ahead when the prediction was made.\nHence, when you set `minutes_ahead` to `120`, the furthest you can set `until` is 2 hours from the current time, and so on.", "operationId": "get_historical_link_congestions_regions__region__links__link_id__congestions_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Link Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string", "default": "0", "title": "Minutes Ahead"}}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "VOL:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CongestionRecord"}, "title": "Response Get Historical Link Congestions Regions  Region  Links  Link Id  Congestions Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/hazards": {"get": {"tags": ["Hazards"], "summary": "Get All Link Hazards", "description": "This method allows you to get the estimated or predicted hazard of all Links in a region **at a particular time**.\n\n### Getting estimated hazard\nYou need to set `time` to a present or past time, and set the `minutes_ahead` parameter to `0`.\n\n### Getting predicted hazard\nYou can set `time` to a time in the future **up to 3 hours ahead**.\n\nIf you leave `minutes_ahead` undefined, it will select the best prediction to use.\nFor example, if you select a time 2 hours from the current time, the best prediction would be the 120-minute prediction, hence `minutes_ahead` is automatically set to `120`.\n\n**IMPORTANT:** Note that `time` should be the time when the value should happen.\n\nSuppose you set `minutes_ahead` to `120` and set `time` to the current time.\nThe response is NOT the predicted hazard 2 hours from now.\nInstead, it is the hazard prediction at current time _predicted_ 2 hours ago.", "operationId": "get_all_link_hazards_regions__region__hazards_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"anyOf": [{"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string"}, {"type": "null"}], "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data.", "title": "Minutes Ahead"}, "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data."}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "Hazard=HAZARD:2024-08,Vol=VOL:2024-11-gnn-nightly,Speed=SPEED:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/HazardRecord"}, "title": "Response Get All Link Hazards Regions  Region  Hazards Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{link_id}/hazards": {"get": {"tags": ["Hazards"], "summary": "Get Historical Link Hazards", "description": "This method allows you to view the hazards time series of a single Link in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\n### Getting historical estimated hazard\nYou must set `since` and `until` to be a time in the past or present, and set `minutes_ahead` to 0.\n\n### Getting predicted hazard\nYou can set `until` to be a time in the future, up to **3 hours ahead**.\nYou must set `minutes_ahead` to value greater than `0`.\n\nNote that `minutes_ahead = 120` represents a prediction made for 120 minutes ahead when the prediction was made.\nHence, when you set `minutes_ahead` to `120`, the furthest you can set `until` is 2 hours from the current time, and so on.", "operationId": "get_historical_link_hazards_regions__region__links__link_id__hazards_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Link Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"enum": ["0", "15", "30", "45", "60", "75", "90", "105", "120", "135", "150", "165", "180"], "type": "string", "default": "0", "title": "Minutes Ahead"}}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "Hazard=HAZARD:2024-08,Vol=VOL:2024-11-gnn-nightly,Speed=SPEED:2024-11-gnn-nightly", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/HazardRecord"}, "title": "Response Get Historical Link Hazards Regions  Region  Links  Link Id  Hazards Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/link-emissions": {"get": {"tags": ["Emissions"], "summary": "Get All Link Emissions", "description": "This resource allows you to get the predicted emission of all Links in a region **at a particular time**.\n\n### Getting predicted emission\nYou can set `time` to a time in the future **up to 3 hours ahead**, in steps of 60 minutes.\n\nIf you leave `minutes_ahead` undefined, it will select the best prediction to use.\nFor example, if you select a time 2 hours from the current time, the best prediction would be the 120-minute prediction, hence `minutes_ahead` is automatically set to `120`.\n\n**IMPORTANT:** Note that `time` should be the time when the value should happen.\n\nSuppose you set `minutes_ahead` to `120` and set `time` to the current time.\nThe response is NOT the predicted emission 2 hours from now.\nInstead, it is the emission prediction at the current time _predicted_ 2 hours ago.", "operationId": "get_all_link_emissions_regions__region__link_emissions_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"anyOf": [{"enum": ["60", "120", "180"], "type": "string"}, {"type": "null"}], "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data.", "title": "Minutes Ahead"}, "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data."}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "PM25-3HR:MELB:2024-06", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/LinkEmissionRecord"}, "title": "Response Get All Link Emissions Regions  Region  Link Emissions Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{link_id}/link-emissions": {"get": {"tags": ["Emissions"], "summary": "Get Historical Link Emissions", "description": "This resource allows you to view the predicted emission time series of a single Link in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\n### Getting predicted emission\nYou can set `until` to be a time in the future, up to **3 hours ahead**.\nYou must set `minutes_ahead` to value greater than `0`.\n\nNote that `minutes_ahead = 120` represents a prediction made for 120 minutes ahead when the prediction was made.\nHence, when you set `minutes_ahead` to `120`, the furthest you can set `until` is 2 hours from the current time, and so on.", "operationId": "get_historical_link_emissions_regions__region__links__link_id__link_emissions_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Link Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"enum": ["60", "120", "180"], "type": "string", "default": "60", "title": "Minutes Ahead"}}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "PM25-3HR:MELB:2024-06", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/LinkEmissionRecord"}, "title": "Response Get Historical Link Emissions Regions  Region  Links  Link Id  Link Emissions Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/queue-lengths": {"get": {"tags": ["Queue Length"], "summary": "Get All Link Queue Lengths", "description": "This method allows you to get the estimated or predicted queue length of all Links in a region **at a particular time**.\n\n### Getting estimated queue length\nYou need to set `time` to a present or past time, and set the `minutes_ahead` parameter to `0`.\n\n### Getting predicted queue length\nYou can set `time` to a time in the future **up to 1 hour ahead**, in steps of 5 minutes.\n\nIf you leave `minutes_ahead` undefined, it will select the best prediction to use.\nFor example, if you select a time 1 hour from the current time, the best prediction would be the 60-minute prediction, hence `minutes_ahead` is automatically set to `60`.\n\n**IMPORTANT:** Note that `time` should be the time when the value should happen.\n\nSuppose you set `minutes_ahead` to `30` and set `time` to the current time.\nThe response is NOT the predicted queue length 30 minutes from now.\nInstead, it is the queue length prediction at current time _predicted_ 2 hours ago.", "operationId": "get_all_link_queue_lengths_regions__region__queue_lengths_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"anyOf": [{"enum": ["0", "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60"], "type": "string"}, {"type": "null"}], "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data.", "title": "Minutes Ahead"}, "description": "If left empty, minutes_ahead is set to the smallest possible number based on available data."}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "QUEUE-GNN:2024-10", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/QueueLengthRecord"}, "title": "Response Get All Link Queue Lengths Regions  Region  Queue Lengths Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/links/{link_id}/queue-lengths": {"get": {"tags": ["Queue Length"], "summary": "Get Historical Link Queue Lengths", "description": "This method allows you to view the queue length time series of a single Link in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\n### Getting historical estimated queue length\nYou must set `since` and `until` to be a time in the past or present, and set `minutes_ahead` to 0.\n\n### Getting predicted queue length\nYou can set `until` to be a time in the future, up to **1 hour ahead**, in steps of 5 minutes.\nYou must set `minutes_ahead` to value greater than `0`.\n\nNote that `minutes_ahead = 30` represents a prediction made for 30 minutes ahead when the prediction was made.\nHence, when you set `minutes_ahead` to `30`, the furthest you can set `until` is 30 minutes from the current time, and so on.", "operationId": "get_historical_link_queue_lengths_regions__region__links__link_id__queue_lengths_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Link Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}, {"name": "minutes_ahead", "in": "query", "required": false, "schema": {"enum": ["0", "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60"], "type": "string", "default": "0", "title": "Minutes Ahead"}}, {"name": "model", "in": "query", "required": false, "schema": {"type": "string", "default": "QUEUE-GNN:2024-10", "title": "Model"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/QueueLengthRecord"}, "title": "Response Get Historical Link Queue Lengths Regions  Region  Links  Link Id  Queue Lengths Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/cycle-times": {"get": {"tags": ["Cycle Time"], "summary": "Get All Intersection Cycle Times", "description": "This method allows you to get the estimated cycle time of all Intersections in a region **at a particular time**.\n\nYou need to set `time` to a present or past time.", "operationId": "get_all_intersection_cycle_times_regions__region__cycle_times_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "time", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Time"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CycleTimeRecord"}, "title": "Response Get All Intersection Cycle Times Regions  Region  Cycle Times Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/regions/{region}/intersections/{intersection_id}/cycle-times": {"get": {"tags": ["Cycle Time"], "summary": "Get Historical Intersection Cycle Times", "description": "This resource allows you to view the estimated cycle time time series of a single Intersection in a particular region.\n\nUse `since` and `until` parameters to control the time range.\nYou can select time range of maximum 30 days.\n\nYou must set `since` and `until` to be a time in the past or present.", "operationId": "get_historical_intersection_cycle_times_regions__region__intersections__intersection_id__cycle_times_get", "parameters": [{"name": "region", "in": "path", "required": true, "schema": {"type": "string", "title": "Region"}}, {"name": "intersection_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Intersection Id"}}, {"name": "since", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Since"}}, {"name": "until", "in": "query", "required": true, "schema": {"type": "string", "format": "date-time", "title": "Until"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CycleTimeRecord"}, "title": "Response Get Historical Intersection Cycle Times Regions  Region  Intersections  Intersection Id  Cycle Times Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"CongestionRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "link_id": {"type": "string", "title": "Link Id"}, "value": {"type": "number", "title": "Value"}, "unit": {"$ref": "#/components/schemas/api_service__internal__models__congestion__CongestionRecord__Unit"}}, "type": "object", "required": ["time", "link_id", "value", "unit"], "title": "CongestionRecord"}, "CycleTimeRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "intersection_id": {"type": "string", "title": "Intersection Id"}, "cycle_time": {"type": "number", "title": "Cycle Time"}}, "type": "object", "required": ["time", "intersection_id", "cycle_time"], "title": "CycleTimeRecord"}, "Direction": {"type": "string", "enum": ["RIGHT", "LEFT", "THROUGH"], "title": "Direction"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "HazardRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "link_id": {"type": "string", "title": "Link Id"}, "probability_index": {"type": "number", "title": "Probability Index"}, "expected_accidents": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Expected Accidents"}}, "type": "object", "required": ["time", "link_id", "probability_index", "expected_accidents"], "title": "HazardRecord"}, "LinkEmissionRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "link_id": {"type": "string", "title": "Link Id"}, "value": {"type": "number", "title": "Value"}, "unit": {"$ref": "#/components/schemas/api_service__internal__models__emissions__LinkEmissionRecord__Unit"}}, "type": "object", "required": ["time", "link_id", "value", "unit"], "title": "LinkEmissionRecord"}, "QueueLengthRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "intersection_id": {"type": "string", "title": "Intersection Id"}, "cp": {"type": "integer", "title": "Cp"}, "link_id": {"type": "string", "title": "Link Id"}, "length": {"type": "number", "title": "Length"}}, "type": "object", "required": ["time", "intersection_id", "cp", "link_id", "length"], "title": "QueueLengthRecord"}, "Region": {"properties": {"id": {"type": "string", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "initial_position": {"prefixItems": [{"type": "number"}, {"type": "number"}], "type": "array", "maxItems": 2, "minItems": 2, "title": "Initial Position"}, "timezone": {"type": "string", "title": "Timezone"}, "features": {"items": {"type": "string"}, "type": "array", "title": "Features"}}, "type": "object", "required": ["id", "name", "initial_position", "timezone", "features"], "title": "Region"}, "RoadNetworkIntersection": {"properties": {"id": {"type": "string", "title": "Id"}, "lat": {"type": "number", "title": "Lat"}, "lon": {"type": "number", "title": "Lon"}, "signalised": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Signalised"}}, "type": "object", "required": ["id", "lat", "lon", "signalised"], "title": "RoadNetworkIntersection"}, "RoadNetworkLink": {"properties": {"id": {"type": "string", "title": "Id"}, "street_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Street Name"}, "polyline": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Polyline"}, "openlr": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Openlr"}, "length": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Length"}, "num_lanes": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Num Lanes"}, "capacity": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Capacity"}, "speed_limit": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Speed Limit"}, "road_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Road Type"}, "origin_intersection_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Origin Intersection Id"}, "dest_intersection_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Dest Intersection Id"}, "dest_intersection_cp": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Dest Intersection Cp"}}, "type": "object", "required": ["id", "street_name", "polyline", "openlr", "length", "num_lanes", "capacity", "speed_limit", "road_type", "origin_intersection_id", "dest_intersection_id", "dest_intersection_cp"], "title": "RoadNetworkLink"}, "RoadNetworkTurn": {"properties": {"from_link_id": {"type": "string", "title": "From Link Id"}, "to_link_id": {"type": "string", "title": "To Link Id"}, "turn": {"$ref": "#/components/schemas/Direction"}}, "type": "object", "required": ["from_link_id", "to_link_id", "turn"], "title": "RoadNetworkTurn"}, "SpeedRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "link_id": {"type": "string", "title": "Link Id"}, "value": {"type": "number", "title": "Value"}, "unit": {"$ref": "#/components/schemas/api_service__internal__models__speeds__SpeedRecord__Unit"}}, "type": "object", "required": ["time", "link_id", "value", "unit"], "title": "SpeedRecord"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "VolumeRecord": {"properties": {"time": {"type": "string", "format": "date-time", "title": "Time"}, "link_id": {"type": "string", "title": "Link Id"}, "value": {"type": "number", "title": "Value"}, "unit": {"$ref": "#/components/schemas/api_service__internal__models__volumes__VolumeRecord__Unit"}}, "type": "object", "required": ["time", "link_id", "value", "unit"], "title": "VolumeRecord"}, "api_service__internal__models__congestion__CongestionRecord__Unit": {"type": "string", "enum": ["%"], "const": "%", "title": "Unit"}, "api_service__internal__models__emissions__LinkEmissionRecord__Unit": {"type": "string", "enum": ["PM2.5\u00b5g/m3"], "const": "PM2.5\u00b5g/m3", "title": "Unit"}, "api_service__internal__models__speeds__SpeedRecord__Unit": {"type": "string", "enum": ["km/h"], "const": "km/h", "title": "Unit"}, "api_service__internal__models__volumes__VolumeRecord__Unit": {"type": "string", "enum": ["vehicles/hr", "vehicles/15-minute"], "title": "Unit"}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-Api-Key"}}}, "security": [{"ApiKeyAuth": []}]}